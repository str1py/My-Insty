<Window x:Class="Instagram_Assistant.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:Instagram_Assistant.ViewModel"
        xmlns:views="clr-namespace:Instagram_Assistant.View"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        Title="My Insty" Height="600" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        ResizeMode="NoResize"  Background="{DynamicResource PageColor}" WindowState="{Binding CurWindowState}">

    <Window.DataContext>
        <viewmodels:MainWindowViewModel />
        
    </Window.DataContext>
    
    <Window.Resources>
        <DataTemplate x:Name="mainView" DataType="{x:Type viewmodels:MainPageViewModel}">
            <views:MainPageView/>
        </DataTemplate>
        <DataTemplate x:Name="loginView" DataType="{x:Type viewmodels:LoginPageViewModel}">
            <views:LoginPageView/>
        </DataTemplate>
        <DataTemplate x:Name="dashboardView" DataType="{x:Type viewmodels:DashboardPageViewModel}">
            <views:DashboardPageView/>
        </DataTemplate>
        <DataTemplate x:Name="settingsView" DataType="{x:Type viewmodels:SettingsPageViewModel}">
            <views:SettingsPageView/>
        </DataTemplate>
        <DataTemplate x:Name="logsView" DataType="{x:Type viewmodels:LogsPageViewModel}">
            <views:LogsPageView/>
        </DataTemplate>
        <DataTemplate x:Name="accView" DataType="{x:Type viewmodels:AccountPageViewModel}">
            <views:AccountPageView/>
        </DataTemplate>
        <DataTemplate x:Name="aboutView" DataType="{x:Type viewmodels:AboutPageViewModel}">
            <views:AboutPageView/>
        </DataTemplate>
        <DataTemplate x:Name="feedStories" DataType="{x:Type viewmodels:FeedStoriesPageViewModel}">
            <views:FeedStoriesWatchPageView/>
        </DataTemplate>
        <DataTemplate x:Name="unfollowView" DataType="{x:Type viewmodels:UnfollowPageViewModel}">
            <views:UnfollowPageView/>
        </DataTemplate>
        <DataTemplate x:Name="audienceView" DataType="{x:Type viewmodels:AudiencePageViewModel}">
            <views:UnfollowPageView/>
        </DataTemplate>
        <DataTemplate x:Name="geoLikeView" DataType="{x:Type viewmodels:GeoLikePageViewModel}">
            <views:GeoLikePageView/>
        </DataTemplate>
        <DataTemplate x:Name="hastagLikeView" DataType="{x:Type viewmodels:HashtagLikePageViewModel}">
            <views:HashtagLikePageView/>
        </DataTemplate>

        <Storyboard x:Key="sbAlertShow">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                                From="0,-90,0,0" To="0,8,0,0" 
                                Storyboard.TargetName="AlertGrid" 
                                AccelerationRatio=".9" Duration="0:0:1.5" >
                <ThicknessAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="6" />
                </ThicknessAnimation.EasingFunction>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="sbAlertHide">
            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                From="0,8,0,0" To="0,-90,0,0" 
                                Storyboard.TargetName="AlertGrid"
                                Duration="0:0:1" >
                <ThicknessAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseIn" Oscillations="1" Springiness="3" />
                </ThicknessAnimation.EasingFunction>
            </ThicknessAnimation>

        </Storyboard>
    </Window.Resources>

    <Grid>
        <Grid x:Name="mainGrid" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>

            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="4" Grid.RowSpan="20" Grid.Row="0"  Background="{DynamicResource TopBorderColor}">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="1" ShadowDepth="0.2" Color="{DynamicResource ShadowBrush}" RenderingBias="Quality"></DropShadowEffect>
                </Border.Effect>
            </Border>

            <Border x:Name="DragMoveBorder" Grid.ColumnSpan="30" Grid.RowSpan="1"
                    Background="Wheat"
                    Opacity="0.00001" 
                    MouseDown="TopBorder_MouseDown" />

            <ListBox Grid.Row="3" Grid.RowSpan="10" Grid.ColumnSpan="4" 
                     x:Name="Menu"      
                     Background="Transparent" 
                     Style="{DynamicResource MenuListBoxStyle}" 
                     SelectedIndex="{Binding Path=MenuItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                     IsSynchronizedWithCurrentItem="True">
                <ListBox.Items>
                    <ListBoxItem Style="{DynamicResource MenuListBoxItemStyle}"  >
                        <ListBoxItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <fa:FontAwesome Icon="User" 
                                                FontSize="25"
                                                Width="25" 
                                                Margin="0,0,8,0" />
                                <TextBlock Text="Account" 
                                           VerticalAlignment="Center" 
                                           FontSize="12" />
                            </StackPanel>
                        </ListBoxItem.Content>
                    </ListBoxItem>
                    <ListBoxItem Style="{DynamicResource MenuListBoxItemStyle}">
                        <ListBoxItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <fa:FontAwesome Icon="Tachometer" 
                                                FontSize="25"
                                                Width="25" 
                                                Margin="0,0,8,0"  />
                                <TextBlock Text="Dashboard" 
                                           VerticalAlignment="Center" 
                                           FontSize="12" />
                            </StackPanel>
                        </ListBoxItem.Content>
                    </ListBoxItem>
                    <ListBoxItem Style="{DynamicResource MenuListBoxItemStyle}">
                        <ListBoxItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <fa:FontAwesome Icon="Cog" 
                                                FontSize="25"
                                                Width="25" 
                                                Margin="0,0,8,0"  />
                                <TextBlock Text="Settings" 
                                           VerticalAlignment="Center" 
                                           FontSize="12" />
                            </StackPanel>
                        </ListBoxItem.Content>
                    </ListBoxItem>
                    <ListBoxItem Style="{DynamicResource MenuListBoxItemStyle}">
                        <ListBoxItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <fa:FontAwesome Icon="NewspaperOutline" 
                                                FontSize="22" 
                                                Width="25"  
                                                Margin="0,0,8,0"  />
                                <TextBlock Text="Logs" 
                                           VerticalAlignment="Center" 
                                           FontSize="12"  />
                            </StackPanel>
                        </ListBoxItem.Content>
                    </ListBoxItem>
                    <ListBoxItem Style="{DynamicResource MenuListBoxItemStyle}">
                        <ListBoxItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <fa:FontAwesome Icon="QuestionCircle" 
                                                FontSize="22" 
                                                Width="25"  
                                                Margin="0,0,8,0"  />
                                <TextBlock Text="About" 
                                           VerticalAlignment="Center" 
                                           FontSize="12"  />
                            </StackPanel>
                        </ListBoxItem.Content>
                    </ListBoxItem>
                </ListBox.Items>

                <ListBox.Triggers>
                    <EventTrigger RoutedEvent="ListBox.SelectionChanged">
                        <!-- <BeginStoryboard Storyboard="{StaticResource ViewChange}" /> -->
                    </EventTrigger>
                </ListBox.Triggers>
            </ListBox>




            <Button x:Name="CloseApp" 
                    Grid.Column="27" FontSize="15"  fa:Awesome.Content="Close"
                    Background="Transparent" BorderThickness="0"
                    Foreground="White"
                    Command="{Binding CloseAppCommand}">
          
            </Button>
            <Button x:Name="CollapseWindow" FontSize="15"
                    Background="Transparent" BorderThickness="0"
                    Foreground="White"
                    Grid.Column="26" fa:Awesome.Content="WindowMinimize"
                    Command="{Binding CollapseCommand}"></Button>

            <Image Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"  Grid.ColumnSpan="4" 
                    Source="pack://application:,,,/Resources/Images/insta-splash.png" Height="70"/>

            <ContentPresenter Grid.Column="0" Grid.Row="1"  Grid.RowSpan="17" Grid.ColumnSpan="28" 
                              x:Name="ContControl" 
                              Content="{Binding SelectedViewModel}"/>

            <ContentPresenter Grid.Column="4" Grid.Row="1" Grid.RowSpan="17" Grid.ColumnSpan="24"
                              x:Name="MainControl" 
                              Content="{Binding MainSelectedViewModel}"/>
        </Grid>
        <Grid x:Name="AlertGrid" Margin="0,-70,0,0" VerticalAlignment="Top" Width="450" Height="90">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>
            <Border Background="{DynamicResource FirstColorBrush}" Opacity="0.9" Grid.ColumnSpan="25" Grid.RowSpan="8" 
                    BorderBrush="White" CornerRadius="10"></Border>
            <Border Background="{DynamicResource SecondColorBrush}" Opacity="0.4" Grid.ColumnSpan="25"  Grid.RowSpan="3" 
                    BorderBrush="White" CornerRadius="10,10,0,0"></Border>

            <Label  HorizontalAlignment="Center"
                   Content="{Binding NewAlert.Time}" Foreground="LightGray" 
                   Grid.Row="1" Grid.ColumnSpan="4" Grid.Column="20"></Label>
            <StackPanel Grid.Column="1" Grid.Row="1"  Grid.ColumnSpan="12" Orientation="Horizontal" VerticalAlignment="Center">
                <fa:ImageAwesome Width="20" Icon="{Binding NewAlert.AlertImage}" Foreground="White"></fa:ImageAwesome>
                <Label Padding="15,0,0,0" 
                   HorizontalAlignment="Left"  VerticalAlignment="Center" VerticalContentAlignment="Center"
                        FontSize="{DynamicResource Big}"  Foreground="LightGray" 
                   Content="{Binding NewAlert.AlertFrom}"></Label>
            </StackPanel>

            <TextBlock Grid.Column="1" Grid.ColumnSpan="20"  Grid.Row="4" 
                       TextWrapping="Wrap" VerticalAlignment="Center" 
                       FontSize="{DynamicResource Small}" Foreground="LightGray" 
                       LineStackingStrategy="BlockLineHeight" LineHeight="15"
                       Text="{Binding NewAlert.AlertMessage}"></TextBlock>


            <i:Interaction.Triggers>
                <i:DataTrigger Binding="{Binding IsAlertOn}" Value="ON">
                    <i:ControlStoryboardAction Storyboard="{StaticResource sbAlertShow}"  ControlStoryboardOption="Play"/>
                </i:DataTrigger>
                <i:DataTrigger Binding="{Binding IsAlertOn}" Value="OFF">
                    <i:ControlStoryboardAction Storyboard="{StaticResource sbAlertHide}"   ControlStoryboardOption="Play"/>
                </i:DataTrigger>
            </i:Interaction.Triggers>

        </Grid>
    </Grid>
</Window>
